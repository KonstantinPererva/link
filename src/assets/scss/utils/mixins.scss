// px to rem
@function rem($pixels, $context: $mainFontSize) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }
  @if (unitless($context)) {
    $context: $context * 1px;
  }
  @return $pixels / $context * 1rem;
}

@mixin size($width,$height: $width) {
  width: $width;
  height: $height;
}

@mixin button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-width: 1px;
  border-style: solid;
  font-weight: bold;
  outline: none;
  user-select: none;
  transition: 150ms;
  cursor: pointer;
  text-decoration: none;
  white-space: nowrap;

  &:hover, &:focus, &:active {
    outline: none;
    text-decoration: none;
  }
}

@mixin posImg {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  max-width: 100%;
  max-height: 100%;
}

@mixin fullBlock {
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
}

@mixin placeholder {
  ::-webkit-input-placeholder {@content}
  :-moz-placeholder           {@content}
  ::-moz-placeholder          {@content}
  :-ms-input-placeholder      {@content}
}

@mixin grid ($cols, $margin-right, $margin-top) {
  margin-right: $margin-right;
  width: calc(100% / #{$cols} - #{$margin-right} + #{$margin-right} / #{$cols});

  &:nth-child(#{$cols}n) {
    margin-right: 0;
  }

  &:nth-child(#{$cols}n - 1) {
    margin-right: $margin-right;
  }

  &:nth-child(n + #{$cols}) {
    margin-top: 0;
  }

  &:nth-child(n + #{$cols + 1}) {
    margin-top: $margin-top;
  }
}

@mixin heightIns($heightStart, $widthStart) {
  height: calc(#{$heightStart} * 100vw / #{$widthStart});
}

@mixin widthSizeIns($widthCurrent, $widthStart) {
  width: calc(#{$widthCurrent} * 100vw / #{$widthStart});
}

@mixin boxSizeIns($widthCurrent, $heightStart, $widthStart) {
  width: calc(#{$widthCurrent} * 100vw / #{$widthStart});
  height: calc(#{$heightStart} * 100vw / #{$widthStart});
}

@mixin fzIns($fzStart, $widthStart) {
  font-size: calc(#{$fzStart} * 100vw / #{$widthStart});
}

@mixin fzEl($fzStart, $fzCurrent) {
  font-size: calc(#{$fzCurrent} / #{$fzStart} * 1rem);
}

@mixin moveBg($widthStart) {
  background-position-x: $widthStart / 100 * 1%;
}

@function marginIns($margStart, $widthStart) {
  $margStart: calc(#{$margStart} * 100vw / #{$widthStart});

  @return $margStart;
}